from fpdf import FPDF
from datetime import datetime

def create_pdf_report(file_path, title, insights=None, metrics=None):
    try:
        pdf = FPDF()
        pdf.add_page()
        pdf.set_auto_page_break(auto=True, margin=15)

        # Title
        pdf.set_font("Arial", 'B', 16)
        pdf.cell(0, 10, title, ln=True, align='C')
        pdf.ln(5)

        # Timestamp
        pdf.set_font("Arial", 'I', 10)
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        pdf.cell(0, 10, f"Generated on: {timestamp}", ln=True)
        pdf.ln(5)

        # Insights Section
        if insights:
            pdf.set_font("Arial", 'B', 14)
            pdf.cell(0, 10, "ðŸ“Œ Insights:", ln=True)
            pdf.set_font("Arial", '', 12)
            pdf.multi_cell(0, 8, insights)
            pdf.ln(5)

        # Metrics Section
        if metrics:
            pdf.set_font("Arial", 'B', 14)
            pdf.cell(0, 10, "ðŸ“Š Model Evaluation:", ln=True)
            pdf.set_font("Arial", '', 12)
            for key, val in metrics.items():
                if isinstance(val, dict):
                    pdf.set_font("Arial", 'B', 12)
                    pdf.cell(0, 8, f"{key}:", ln=True)
                    pdf.set_font("Arial", '', 12)
                    for subkey, subval in val.items():
                        pdf.cell(0, 8, f"   {subkey}: {subval}", ln=True)
                else:
                    pdf.cell(0, 8, f"{key}: {val}", ln=True)
            pdf.ln(5)

        # Footer
        pdf.set_y(-20)
        pdf.set_font("Arial", 'I', 10)
        pdf.cell(0, 10, "Generated by Universal LLM Copilot", align='C')

        # Save
        pdf.output(file_path, 'F')
    
    except Exception as e:
        print(f"[PDF Generation Error]: {e}")
